<launch>
  <arg name="UAV_NAME" default="$(optenv UAV_NAME)"/>
  <arg name="TRACKED_UAV" default="uav2"/>

  <!-- will it run using GNU debugger? -->
  <arg name="DEBUG" default="false" />
  <arg unless="$(arg DEBUG)" name="launch_prefix_debug" value=""/>
  <arg     if="$(arg DEBUG)" name="launch_prefix_debug" value="debug_roslaunch"/>

  <!-- nodelet settings-->
  <arg name="standalone" default="true" />
  <arg name="manager" default="$(arg UAV_NAME)_filter_reflective_uavs" />
  <arg name="n_threads" default="8" />
  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <group ns="$(arg UAV_NAME)">

    <node pkg="nodelet" type="nodelet" name="filter_reflective_uavs" args="$(arg nodelet) filter_reflective_uavs/FilterReflectiveUavs $(arg nodelet_manager)" launch-prefix="$(arg launch_prefix_debug)" output="screen">

      <rosparam file="$(find filter_reflective_uavs)/config/filter_reflective_uavs.yaml" command="load" />

      <param name="uav_name" value="$(arg UAV_NAME)"/>

      <!-- <remap from="~ground_truth_in" to="/$(arg TRACKED_UAV)/ground_truth"/> -->
      <!-- <remap from="~lidar3d_in" to="os_cloud_nodelet/points"/> -->
      <!-- <remap from="~lidar3d_in" to="pcl_filter_detection/points_processed"/> -->
      <remap from="~lidar3d_in" to="pcl_filter_ouster/points_processed"/>
      <!-- <remap from="~lidar3d_in" to="reflective_marker_simulation/points_out"/> -->
      <remap from="~estimated_pos" to="reflective_marker_detection/estimates"/>

    </node>

  </group>
</launch>